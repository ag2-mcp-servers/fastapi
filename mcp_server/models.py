# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T17:24:08+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Config(BaseModel):
    providers: Dict[str, Any] = Field(..., title='Providers')
    topics: List = Field(..., title='Topics')


class DiscordMessageRequest(BaseModel):
    base64_message: Optional[str] = Field(None, title='Base64 Message')
    channel: str = Field(..., title='Channel')
    message: Optional[str] = Field(None, title='Message')


class SlackMessageRequest(BaseModel):
    base64_message: Optional[str] = Field(None, title='Base64 Message')
    channel: str = Field(..., title='Channel')
    message: Optional[str] = Field(None, title='Message')


class SnsMessageRequest(BaseModel):
    base64_message: Optional[str] = Field(None, title='Base64 Message')
    message: Optional[str] = Field(None, title='Message')


class TwilioMessageRequest(BaseModel):
    base64_message: Optional[str] = Field(None, title='Base64 Message')
    message: Optional[str] = Field(None, title='Message')
    to: str = Field(..., title='To')


class ValidationError(BaseModel):
    loc: List[str] = Field(..., title='Location')
    msg: str = Field(..., title='Message')
    type: str = Field(..., title='Error Type')


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title='Detail')
